%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 334.000000 297.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.15.6 (Build 19G2021) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 334 297
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 334 297
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue-Bold
%!FontType1-1.0: HelveticaNeue-Bold 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /afii10037 put
dup 34 /afii10067 put
dup 35 /afii10065 put
dup 36 /afii10072 put
dup 37 /afii10070 put
dup 38 /afii10079 put
dup 39 /afii10074 put
dup 40 /space put
dup 41 /afii10076 put
dup 42 /afii10029 put
dup 43 /afii10096 put
dup 44 /afii10069 put
dup 45 /afii10097 put
dup 46 /afii10078 put
dup 47 /afii10031 put
dup 48 /afii10081 put
dup 49 /afii10082 put
dup 50 /afii10093 put
dup 51 /afii10080 put
dup 52 /afii10035 put
dup 53 /afii10090 put
dup 54 /afii10083 put
dup 55 /afii10084 put
dup 56 /hyphen put
dup 57 /afii10032 put
dup 58 /afii10034 put
dup 59 /afii10073 put
dup 60 /afii10066 put
dup 61 /afii10033 put
dup 62 /afii10085 put
dup 63 /one put
dup 64 /four put
dup 65 /afii10088 put
dup 66 /afii10040 put
dup 67 /afii10077 put
dup 68 /afii10094 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1018 1 index div -481 2 index div 1437 3 index div 1141 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C000000386670676D00000000000000D400000428676C796600000000000004FC00001F2068656164000000000000241C0000003668686561000000000000245400000024686D74780000000000002478000000986C6F636100000000000025100000004E6D617870000000000000256000000020707265700000000000002580000000FB14006D0085008D009C00000010004BFF0E0005020E00CA02110000140074006B0084008E007F009D00000011FF4A000D0205000E02CA0011B800002C4BB800095058B101018E59B801FF85B844001DB9000900035F5E2DB800012C2020456944B001602DB800022CB800012A212DB800032C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800042C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800052C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800062C2020456944B001602020457D691844B001602DB800072CB800062A2DB800082C4B20B003265358B0801BB040598A8A20B003265358B0022621B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B80003265358B0032545B8014050582321B8014023211BB003254523212321591B2159442DB800092C4B535845441B2121592DB8000A2C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB8000B2C2020456944B001602DB8000C2CB8000B2A212DB8000D2C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB8000E2C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB8000F2C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800102C2020456944B001602020457D691844B001602DB800112CB800102A2DB800122C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800132C4B535845441B2121592DB800142C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800152C2020456944B001602DB800162CB800152A212DB800172C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821

B8002810B80005D0B800052FB8002910B8000FDCB900190004FC41030009001900015DB8000510B900230004FC41030006002300015D00B800004558B8000A2F1BB9000A000B3E59B800004558B800002F1BB9000000053E59B900140002FC410700070014001700140027001400035DB8000A10B9001E0002FC41070008001E0018001E0028001E00035D303105222E0235343E0233321E0215140E0227323E0235342E0223220E0215141E02018553825A30305A825352835A30305A8352354A2E15152E4A35354A2E15152E4A103964874E4F8A663A3A668A4F4E876439832944552D2F5845292945582F2D554429000100450000029702CA00070070B8000A2BB800082FB800092FB8000810B80000D0B800002FB8000910B80002DCB900030004FCB8000010B900050004FC00B800004558B800002F1BB90000000B3E59B800004558B800022F1BB9000200053E59B800004558B800062F1BB9000600053E59B8000010B900040002FC303113211123112111234502529DFEE89D02CAFD360246FDBA000000000200450000027E02CA000E001B007AB8000A2BB8001C2FB8001D2FB8001C10B80000D0B800002FB8001D10B80006DCB8000010B9001A0004FCB8000CD0B8000610B900140004FC41030009001400015D00B800004558B800002F1BB90000000B3E59B800004558B8000D2F1BB9000D00053E59BB000F0002000B000E2BB8000010B900190002FC30311321321E0215140E022B01112301323E0235342E022B0115450142435E3B1B1B3B5E43A59D01171B3226171726321B7A02CA2740532B2C524027FF00017A08172A22222A1708D600000000010026FFF002BF02DB00270072B8000A2BBB001A00040005000E2B41030006001A00015D00B800004558B8000A2F1BB9000A000B3E59B800004558B800002F1BB9000000053E59B8000A10B900150002FC410700080015001800150028001500035DB8000010B9001F0002FC41070007001F0017001F0027001F00035D303105222E0235343E0233321E0217232E0323220E0215141E0233323637330E03018553825A30305A82533A6A53360798041C2A351D354A2E15152E4A35485109980632526E103964874E4F8A663A2241603E1B2D22132945582F2D5544295848446B4C28000001FFFBFFF302A202CA00130040B800142B00B8000D4558B8000A2F1BB9000A001A3E59B8000D4558B8000D2F1BB9000D001A3E59B8000D4558B800002F1BB9000000143E59B900070010F4303117222627351E0133323701331B0133030E03CF1A290A0B1F17470FFEE2B0C291A4DF18313B450D0E067F06093B0218FE8C0174FDF4374D31160000010045FF5D02E602CA000B006AB800142BBB00040013000100182BBB00080013000500182BBB00090011000000182B00B8000A2FB8000D

BB00200001001D000E2BBA0009001D0020111239B8001110B900130001FCB8000010B9002A0001FC30311321321E02151406071E0115140E02232137323E0235342E022B011537323E0235342E022B01153A0129223C2D1A262028361B304024FEC9F512221A10111C2413635E101E180E0E171F105E02050F1F322226370E0B3D36263927145C050E1B16161C0E0589D9040D171413170C0476000000020007FF72026602050010001900B3B8000A2BBB000E00030000000E2BBB000900030011000E2BB8000E10B80006D0B800062FBA000C00110009111239B8000C2FB9000B0003FCB8000E10B900130003FCBA0019000E0013111239B8000B10B8001BDC00B800004558B800072F1BB9000700093E59B800004558B8000D2F1BB9000D00053E59B900000001FCB80009D0B8000AD0B80001D0B8000A10B9000B0002FCB8000FD0B8000A10B80011D0B8000710B900120001FCB8001110B80019D0303137333E033D0121113315233521152325112315140E0207073E0B17130C019D4385FEAB85018E8B0B1214096B16425260355BFE66F98E8EF901300D30584B3C14000002001DFFF302210213001C00250095B8000A2BBB001300030005000E2BB8001310B80025D000B800004558B8000A2F1BB9000A00093E59B800004558B800002F1BB9000000053E59BB001D00010012000E2BB8000010B900160001FC410B000700160017001600270016003700160047001600055DB8000010B900190002FCB8000A10B900200001FC410B000800200018002000280020003800200048002000055D303105222E0235343E0233321E02151C0107211E0133323637330E01132E0123220E020701253D6244252646613B3E5F3F2001FE8B03403C2B3E077D1E7C150A3334232C1B0B010D2748643C3A64492A2E4D6637070D07453E2B185D50014736381722260F0001FFFB00000331020500130087B800142BBB00060012000300182BB8000610B8000DD0B8000310B8000FD000B8000D4558B800012F1BB9000100183E59B8000D4558B800042F1BB9000400183E59B8000D4558B800072F1BB9000700183E59B8000D4558B8000A2F1BB9000A00143E59B8000D4558B8000E2F1BB9000E00143E59B8000D4558B800122F1BB9001200143E5930311327331735331537330713232707152335270723C5B69DA786A79DBDD1A4951F86258FA40122E3D8D8D8D8DEFED9DF28B7AF30DF00000000010016FFF301F90213003300CAB8000A2BBB002400030015000E2B4105000900150019001500025DBA002A00150024111239B8001510B9002F0004FCB8002410B80035DC00B800004558B800212F1BB9002100093E59B800004558B800002F1BB9000000053E59BB00120001000F000E2BB8000010B900050002FCB8000010B900090001FC410B00070009





00>] def
/CharStrings 38 dict dup begin
/.notdef 0 def
/space 1 def
/hyphen 2 def
/one 3 def
/four 4 def
/afii10029 5 def
/afii10031 6 def
/afii10032 7 def
/afii10033 8 def
/afii10034 9 def
/afii10035 10 def
/afii10037 11 def
/afii10040 12 def
/afii10065 13 def
/afii10066 14 def
/afii10067 15 def
/afii10069 16 def
/afii10070 17 def
/afii10072 18 def
/afii10073 19 def
/afii10074 20 def
/afii10076 21 def
/afii10077 22 def
/afii10078 23 def
/afii10079 24 def
/afii10080 25 def
/afii10081 26 def
/afii10082 27 def
/afii10083 28 def
/afii10084 29 def
/afii10085 30 def
/afii10088 31 def
/afii10090 32 def
/afii10093 33 def
/afii10094 34 def
/afii10096 35 def
/afii10097 36 def
/uni20BE 37 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-1018 -481 1437 1141} readonly def
/UniqueID 4420573 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB2803CE0D9AF585BAFE0853EAA060D4DBE18F8689E8642CD0169227EC0543D72EDA0A344DE8D7AEC820BB73D1189F8304C3042E93CA1F8C8960875DDFCFD6775B218BF354F365CDD0F3F0EC65B61505621D397C3DC2CABFFC9E3D6A2F7DA7A0E4F39FA9C3239B2D8A40BA9CAC0AE1258A15EBD90A66A364E3EABC26FFE74684F149AFF04E6EFBD52AA3CBDCDBFF446F4702934B1D467D56929CDC14C68DD8DB515B5C861444A49B815374DCE136C7D37095867941BD24D390334A80BF6EB7ADEDF2BDC69256A45A8AACE269D9088BE4F34106B21B1F796C462CB436F71FFD26EB244A5C89B791113EF881DFF61E9167FDF3CD713119DF4660E85D762ACE093CC42E165C52D6349A400796F98991A38100C94AFEE0C5843E38D79B26DFC68C9C310644F6B2CE5889A3D02937D83AF5C5AF5F02CC4F6B0E85508526E2C8FB8563A0C53A7D1FC608254E5DD77F688C28A77913B8FED5779D43EDE4851EA9B07A76D10E032B82FC0B8B03045C0AF57A3E482BB8E3048B847F3112F54EA050A7EA86D85B13F352E419615D776C100C4906A234106C91526C191D9520363F3E7C93FCA8E0E6F1C5714B9C257675AD24DF4B816DD907E065D555CDA07B7EE35D3AAF748A9C1886CAA594D90B351D82C56F20A416A1B085F982A2D9801C70F0F55782FC035E516C281C25A398DDB4CEB7F69B8420B5EBB14159575D0F614E0E90EC5D107EDFAF7491B25335B2A8D2E429A11963B297ECEF592CCF401FB5C12B7B7736CCEECB367A2C3
C84050D4613725B864BA18949E3F1EF3799E9E49FFABA41475DB9274F89020D0A9AEA95664F4308B75EF8CC23353D5B2A6E2C8A165DA3BCBD9C36598312C8EE962B429AAADBECC9A2D11F6B9D4CF5C9B234C2A43E6F910153663E0AA1119F6230B5987AB59124301EF33BB531758E74144A8FD7DFE38E3B95B73591886CB18621AA5FC6F63C798EE853D7E4414CC2E235860DF79CA7F19B348505645D3C9C13B11B9BF5CFDF8676BEDF4245C30D4DAE7BB237B799FACE0DB714B112AD61BE0240383BF3E66EFD3CCF162C2AD0E1517E5623EBFA10DB2FD71E602B1C05C48911AD28D5CFBC050F09D20C62A6B32F777658B633612C2FDBD2B52F790A7B171A6E359A22600C01889A04719338D5FE08CFBF03AFA35EE0DA0AB54B80F72E5F9F865F660853280938B4E468A5D103989BCC1CE602E4010271EC93397F8A6238F9F5C7939514D6740B55B8FFF36DEA8B3F05547B58461B34771985FE4CBA11954379C1ABA8E34DC1EBBCFB01FF46F163F1EE12A4368A57D562955209B1FF92482FF4A27CB7BDB728CF5441E442C53094BE3C83329446A608D4DA3F2052628D9FB4F1B26CFD4C095B9104194E67269DB298E3E9624701C705F898BC442592E92FCF91B64ED5EE913171CB8020BCA743E512A71BFAFC0D7944E34926F8A7A1F74F19E7B67B95E87EA112B2896455EFCDC5A5A8101EC2769B8EC22EE9CA00066DC26C3D78518B54C1B3678260546A221CACBAE6EECE4329DE0902BEBD348DA0183FC948D823BBED9D06DF68DE44D6D34BBC053BA42E298E505550B5BBE2E3792E7E0C348BE4FCD3EB5C8D59B5CDB1286E430D91438230A6743951A66A7E3873173AA4235BDAC538365F23B8F12D2242AB2F7E43F2C5061FFA1CF12D63F61F0709D84DA6DD6D725E0EC22A6C16260C50A7029291580CA49600EEAAAC8ACE1AF71737FCE962C9E7E38A332EAFF886949B3634D7C4D92EEF98930425D1CAFD66B35E1022BFE617A48F5F933AB0EC8908FDE7BED63D7D391A0715C57E6D25A75D95D231D7A13225E2D95906A33D2B7CBF8E5D1FF0612DD605C8286BF3952FD0E83F33EFB9FD834FF40057DE8104C0376E8FEFC30B20C5911C2C4554CAAFFE2DE6DCF7C1E944B394A33F68361433EABAA06D4D3F37DB5AFAE06A71E45EC24E4EB51AAE996B4CDDFBDD127FC3AF57DEA90FC2EF2C936EB70F8106818B17EF776F538F059C75AC9C3DF6477568AD4041503E40FBE6C90DB4D73D8380273D18BE85EC3CC4F71EFACB67CECA8D6F86FD84CB3314D5194DD37DFB027A1E68FDFAB65F825893EC5D675E65BEF07AC498CB91192DD8CFB133E28AB94C5D8267923CB3A9E5CF4174A6719CE9C1B52209323FCD44670D1B310D7ED504BC47B86E2BE55A6136A30CA9179D17AA8B6B65FF6A5362DE20945B8725CCC921CECEBD0DC3934BFD7A0A3279F5FA9
321F7CF674047D563C72964C2937C23E96C90AA39CAF2AB8FD3DCEE59331A6135459D7993086A9EB8039E33CA0E81EBC6D4E052E6BB7DDC9B3646262EAED725CE3193A350F6875A0B7859F94B0DA68DC21D0828434D51653CA6D2CADAAE1E8D892A6887AA6C5655D6E4EA82E5896029CDEC80AFA23A5C824C7CED3E7DCB97E3444D45DAE7B30CF2E0DF21EE51361F45F5761B0E3C675AE5B076854CAF3C5C46B01DCD18AABD8F1B7E85301B8E40922BCB43394103D66AA7A5C1D19BDBA9F4E6519DEE0AB3B774C8F104FB08DF80AA267C0406FB615A36042AAE9A8D4FF3D41310B83B2A3753745568217A7B7029B24F12DF5CA71454157BC27F7547B016B452D90894B6E293584202CC660E161DCCF7CE246CFF5901B53EEEC8891A657088238CBE3F17D1911DA3094E9F341CA6ABDA0A66F51351CD8AFFEEE25CEE42D637EAE8088B1531221F84EB7932A5E5035C74A38BA0E43A0CF63041608C5899983E0EE0A9A995CF5DDE6EF9CDF8A547327733E800C4CE65C62026B2D8B00A25024462D783835DD0A92344CA5530D2A955E732B3A99311CBFCC34B233CE249F18541B163E546ED4ABC9E4FF10A75954D3E3D1DE3F09395D0D4B803947082FF74D217DCECAC7CDF8771E55AC0EA14F415A7F1DA07951B75CDE18797FA5C8E3E6F9BF0D31E8F98F3CC90B23CAE07A05CA2F0320DC595CF087173C51799929EF61885C34CE30C831D37DA8FF5F05F8FD68CE769AA2B21AEB22A40F6E1577C1D2115B920946D931BA966F56063662DE5D4B281CB738BE34D6EF401265897596B1FD93C246027AB0150216CFEFA00F0BB75D85D2DBDE163263CAC66035409EE32D9E0DEC95AAA1DCD254D52078196A297FDC178B0D3BF748E8EC8F207D8815CDFB0F9ECD692AC423A3796906F6459881C3CE18F22CA8D77D1C49058C22E0E91CBEB8E031B21857DEFBF905F275E8C0EB614A247FD2C2C67BABDA454B95E09F1DAA2DBB8EBA4438266C633D13163504F252DE413C449DC4FDFDE2AF56B7978567C3305DF292B011446FFA3D337278FF2C091402367FA5C3BDC5055BC636682288892AEECA2848C5FD07E10B01FEC1702EF8EE16D20857956E7E046CC6F089ABADCD1366F83303CF6D5441EBB81569E0FA876C62DE8AF8F9AF2378AC3544BD6B086594B95B5565E2CBDF991ED2E972F6B35B15D1A4F82E2D54B1FDA91EAC39A8306FD8621F24F5685CF4E8D9FFFBDF2FB8515BBD0758E117186ED4886E381437B6DF403BF3393519BBB65B47751604F2F80559AC953DBCEB7E4A16DDC4813BCEF2DBB534F94B4AC439DE22E393CB19B342C2B01CC8FBD4765DC09F26438E861313BD1A172D4C2157ADDE2AA6D9FE8B804BCC34C1036187D61824FF6AA011B1F04E68AA3606B777B632AFFD73527EA4B93D439DC4DB03614FC69AFCEA2E585368544FAB8039A198

AB708559F8FDABFD696E4F1039969883DA28DABB6ED37DC31FA99822C16E6D4CBBF73733FCFEA13E95DEF24C27E5C3611E2D40987B4FC926E210DBBF68FFD28228CEFFDC965515948DB9ABAEC4B9A73ADAB1ADAD440B5B650EEF900BA7B9597E9FA8E04BDC3BEDD672A84D3F4C6CDC78A8BD00688E9E73526A722BDC0283D1AC89CF1C5441A5C782BF117717553F95FDDAF7C6D99C40D982144253805F16FB887B9D6A5D5B9C88364525ECC430B1621381E8981D06ED4F28A9F91200BC944395C80C56C3FA7515D3702A73AAE8D8CB81D81355B80ACED76DFABBB216A3A9EDC837998654BB01A851B268D2F7F5401166CE2FF442C16D624FB8B70460C23CE74AB18D514A6D626F7182AB38CD632F22C11A768B00E04BDF70E5C898FC338BD4EE3A9133B28661C4DAA8A38E8842AFF7D94E3DFA2A09816A46CCF0D9ED73D615B00C5D845DD236C69E4C14CEDA743248220E5493157BDABD32373C22CB988D49BC64D2BFA97E93F13709333F3D5C8A40A9BDF70014B28E3E408CA8F031B8B856692AADCA8192EE1C2DB3BD723344583748550ADD619C74E80C093316C442E307D94BD864E0B4A393DB47594D5A49237435CEB90D8725DD012B9B563B987D08E1706FC57329311413F57C5055EFA37960CE60E0F82D0F664ACC2D082DA19062BD2AADD2450206E25BF747945B3C5E8A3A5C6979C05EFACC1F4B60C96A135C0087CED3B207D3825E0CABC0EBE8DF844BAFF7655C04C4E6E4971F73EB85047F752B6054478A25B37A712BA5FE988507EAFE0F9C475FE97A0D2A11F88F8191C56FBA3AFB2912E43E3A5661BD63CFE3221D3825C4232AB60C7745700CA0E0AE67B454AF02831E1BF2A01DD53BE361DD247F4C28B4BC2E22909925CC1F1423C749627CAA10B162291D50F527468B97AE69AA7198DD10D76E0B151EA47C7F7D3048C14CF6F7DAC9153F0ECD3AB482FD4F1DC8EB218A9D8140D1B29E796196FE26E57B7207710984D9C1BE4BF0B779F1DBF7AE6351C66C8A2702C19B32497EF8446CD232CC9CF6B1E79D4D82F84F9CB6818743B8AC6D1397A3E3FB3EC22F7B221557151AE282F39118C9C8D5FBF5859A9481A3F9680D361BBB5B0FDD74E8D024810D6655D3CE3F6213A5FFB01A3A3FFF8784AB37A939D31EFD4FC95B21331AB633417CC318D75022A882BE360EF1B2494FA208F4949B8ECB0FFDF42BAC64F3F209A5AD0BF1AEFBF7A85A60D463210E02D02E804B012972B394632D2DD3EAFED1C2A2781A2E3C8C3E4C41412C4ECC844BEAB7C6F6BF995CA65BCFA35C83A511EDAF3B92F9AA3507966F37871DBBFA29A8C60CF5ABF25DF6F606F2EC0E49D5D26C331C439F4201050F191344B34F31DB39EE5F06626F2BE133F763C331C0D83C50263A349B378D763FA16510A829F61F09EAA46F6A9DD4F0AB07369CD5286186EA1547D78E58
5D24E1BDEEEB2FEAF03298C07E8F75BDCD186B0EFCE252EB44866BB4E09B605E70DA05CF2408CE5982F815EF05F9BB5512993FB84A3A23D19A07CF4DC6EE590A36A8EFC75919BE1BD54B50345FE12316AC2FF23D255F298C77A33A0EA7127806CC05D4ABB7592C6BDD1E0900E6CEA152F7A5BD7FF0CAF3FC081581ADD8351841C8274A81C83F3C4AEEF80BFD03D47F5C2B4CB621CACA2253F7B9BE132F5EDC9D575FD1C668D8E68B8664E40A9F4D52A44E5E57F67C88E93F6F32E6FB225B8A0CB767D6B1FD9A586B63C1D7253D053B0C496148D328D8D486601405A78E1516E951744CE228A50EEB69924E7689095F7B656639A2E63E5B50F49471511F50744D52BF748AB7ADAC86DDBCC85FDAF5185931753DB65EAC63DB70330F7FE475A43AB5362472BBFF047431249CCC8AD4D52B2A74BAAD42A2CF36EDE957E9E8AC7469ECCD0B72AED4E6457119081AD096A750C908B76FFC646E4D39279DC3EC37FCB399BDD41D0F7FD3D4378CA45F74F541C3A15B163E0A2B5C284F816C6DF49FD7B0F5A7D7F18D4B78E2E69557BE6889DD2AD317A53553EAAC6AEA7F951002995396A8FF0BAA2B35A1367B879D3B971FD71AC254D5ED0196FB32B0451CF03AA7CA16D06DA57C7469F8BCC442C4E0EBA9E011B70BD27CC4A20906E6A19435321C1881046374B800E46AE85FD5F86E8FB6AE65836547E65A39CD373C171F1E6CFF3DA3EAF2678AE219726003C6760CC07B97B93B90A688E2C68CEFF175C304D32029C8FAE1FBF8F709FA62329D541C27FD78F61D63F64D3069B4DD04438DA3C103845A98B8F26CCFC54E1B08257B3452BD347A3E3705C4659CA7DCBA5D03E6E6C75175948A98DD52DB48D71941A289DB9F18EF296B591D881AD34EA9ABF9D1B75F73757DBB247D5ACE6BB9D7370E247F5EC060CBC3EB3DEE9A958734B91959DE94ABE0DFC338D92E90B22747273713E0DA6BD10465DA59CB720A9C6F0FCDDFFDE412043696BBCB655B577E14BDEB698054BDE05C3E4AC42BBBECE312D6319272B312D025737BFD31E340F3719B27BF4870553A2DAA11466DBE7AE67C33F2926ED4DDD629C4F5FF9FCB0860D2504E89A5C41CD535D16FAADB302F8A8C66E3E21969AD5C695EDBD43913955503FFBE8A922D3FC22E30D27BAA17385E4B5F3C150CC08C1FDF30670402505A3CBF1A6A36D00C62F17A4BF6D9EB5004E918E7DE2947B4D5362DF7561E0363CE1A8B017C0E1A10B589C9B3913DA6D2E29AC22766E3826342C7FA44C9FD36C6859B6C03EAAC40A4640919F8C0280E86A768856E55F5136EB0F657F3474CB11B3BA3059CF0F0594A202B21204F9D5CB46E4786C2BAC0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Bold cguidfix
/F1.1/HelveticaNeue-Bold renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 334 297 rc
0 297 m
334 297 l
334 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-1375.6154 1358.1538 m
2724.3845 1358.1538 l
2724.3845 -1751.0769 l
-1375.6154 -1751.0769 l
h
-1375.6154 1358.1538 m
f
/Cs3 SC
0.52359837 0.77792907 0.88629311 sc
1 261.625 m
166.5 296.125 l
332 261.625 l
h
1 261.625 m
f
1.5 w
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -141 512 cm
142 250.375 m
307.5 215.875 l
473 250.375 l
h
142 250.375 m
S
0 i
/Cs3 SC
0.75505441 0.87746078 0.92157745 sc
CM
1 45.5 m
1 225.5 l
94 225.5 l
94 45.5 l
h
1 45.5 m
f
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -141 512 cm
142 466.5 m
142 286.5 l
235 286.5 l
235 466.5 l
h
142 466.5 m
S
/Cs1 SC
0 sc
0 i
0 1 1 0 -329 -53 cm
/F1.1[ 22 0 0 -22 0 0]sf
124.623 370.86185 m
(!"#$%&'%\(\)\()[ 14.234000 12.782000 12.628000 17.864000 12.628000 13.046000 13.200000 12.628000 6.116000 12.628000 0.000000 ] xS
149.802 397.5 m
(*+,-.)[ 16.346000 18.370000 13.728000 12.716000 0.000000 ] xS
/Cs3 SC
0.75505441 0.87746078 0.92157745 sc
CM
240 45.5 m
240 225.5 l
333 225.5 l
333 45.5 l
h
240 45.5 m
f
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -141 512 cm
381 466.5 m
381 286.5 l
474 286.5 l
474 466.5 l
h
381 466.5 m
S
/Cs1 SC
0 sc
0 i
0 1 1 0 -90 -292 cm
352.35901 357.54279 m
(/%01%12"&3%\()[ 16.302000 12.628000 12.826000 13.442000 12.628000 13.442000 17.116000 12.782000 13.046000 13.442000 12.628000 0.000000 ] xS
355.043 384.18094 m
(43"%15%&678)[ 16.302000 13.442000 12.782000 12.628000 13.442000 18.018000 12.628000 13.046000 12.628000 11.044000 0.000000 ] xS
382.246 410.81909 m
("3"#&'%)[ 12.782000 13.442000 12.782000 12.628000 13.046000 13.200000 0.000000 ] xS
/Cs3 SC
0.75505441 0.87746078 0.92157745 sc
CM
1 45.5 m
333 45.5 l
333 1.5 l
1 1.5 l
h
1 45.5 m
f
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -141 512 cm
142 466.5 m
474 466.5 l
474 510.5 l
142 510.5 l
h
142 466.5 m
S
/Cs1 SC
0 sc
0 i
264.935 496.18091 m
(96&3"2)[ 17.116000 12.628000 13.046000 13.442000 12.782000 0.000000 ] xS
/F1.1[ 21 0 0 -21 0 0]sf
245.81648 331.13013 m
(:#;1#<37\)#\()[ 14.007000 12.054000 11.382000 12.831000 12.054000 12.747000 12.831000 10.542000 12.054000 12.054000 0.000000 ] xS
250.76198 356.73929 m
(=13,>\)73")[ 15.372000 12.831000 12.831000 13.104000 10.899000 12.054000 10.542000 12.831000 0.000000 ] xS
295.41849 408.34842 m
(?@\()[ 11.676000 11.676000 0.000000 ] xS
249.19748 433.95758 m
(=1'&A'03")[ 15.372000 12.831000 12.600000 12.453000 12.663000 12.600000 12.243000 12.831000 0.000000 ] xS
/Cs3 SC
0.75505441 0.87746078 0.92157745 sc
CM
1 261.375 m
333 261.375 l
333 224.875 l
1 224.875 l
h
1 261.375 m
f
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -141 512 cm
142 250.625 m
474 250.625 l
474 287.125 l
142 287.125 l
h
142 250.625 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 22 0 0 -22 0 0]sf
280.797 276.55591 m
(B%CD)[ 16.544000 12.628000 13.178000 0.000000 ] xS
5 w
0.60000002 i
/Cs2 SC
0 0 0 sc
271.375 255.625 m
344.625 255.625 l
351.94278 255.625 357.875 261.55722 357.875 268.875 c
357.875 268.875 l
357.875 276.19278 351.94278 282.125 344.625 282.125 c
271.375 282.125 l
264.05722 282.125 258.125 276.19278 258.125 268.875 c
258.125 268.875 l
258.125 261.55722 264.05722 255.625 271.375 255.625 c
h
271.375 255.625 m
S
ep
end
%%Trailer
%%EOF
